博学之, 审问之, 慎思之, 明辨之, 笃行之;
壹、贰、叁、肆、伍、陆、柒、捌、玖、拾;



壹.模块导入和导出
    Node采用的是commonJS的规范, 一般将代码拆分到不同的JS文件中, 每一个文件就是一个模块, 文件路径就是模块名;
    在编写每个模块时, 都有require, exports, modules三个系统的变量可供使用, 
    核心模块(已封装好的内置模块);
    自定义的模块;
    第三方模块(npm下载下来的模块);

    require
        require函数用来在一个模块中引入另一个模块, 传入一个模块名, 返回一个模块导出对象, 模块名可用相对路径, 也可用绝对路径;
        作用一: 执行导入的模块中的代码;
        作用二: 返回导入模块中的接口对象;
    

    exports
        exports对象用来导出当前模块的公共方法和属性, 另个模块通过require使用当前模块时, 得到的就是当前模块的exports对象;


    module.exports
        module.exports用来导出一个默认对象, 没有指定对象名称, 常见于修改模块的原始导出对象;
        解释: module.exports导出整个对象,也可单个属性导出, 但export只能导出单个属, 不能导出整个对象;
        

    模块初始化:
        一个模块中的代码仅在模块第一次被使用时被执行一次; 并且在使用过程中进行初始化, 之后缓存起来便于后续继续使用;
        解释: 当require()导入时就会将exports中的代码执行一次, 如果同一个文件导入两次, 代码仍只会执行一次;
                


    第三方模块(npm下载下来的模块);
        require函数会优先查找node_modules中的包, 并不用输入node_modules的具体模块路径(太麻烦了);require会自动帮助查找;
        所以通过npm下载的 node_modules 模块只需要引入包名即可自动查到;

        如果在同级目录中没有node_modules目录, 会往上级父级一只查到这个node_modules目录;
        一直找到磁盘根目录, 如果没有node_modules目录; 就会报错;
        